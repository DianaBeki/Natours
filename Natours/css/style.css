/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Lato', sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px;
}


.header {
  height: 95vh;
  background-image: linear-gradient(
    to right bottom,
     rgba(144, 238, 144, 0.801),
     rgba(0, 100, 0, 0.839) ),
    url(../img/hero.jpg);
  background-size: cover;
  background-repeat: no-repeat;
  background-position: top;
  position: relative;

  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.logo-box {
position: absolute;
top: 40px;
left: 40px;
}

.logo {
 height: 35px;
}

.logo:hover {
  animation: moveInRight 1s ease-out;
}

.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

.heading-primary {
 color: white;
 text-transform: uppercase;
 margin-bottom: 6px;
 backface-visibility: hidden;
}

.heading-primary-main {
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;
  animation: moveInLeft 1s ease-out;
}

/*
animation-delay: 3s;
animation-iteration-count: 3;
*/

.heading-primary-sub {
display: block;
font-size: 20px;
font-weight: 700;
letter-spacing: 17.4px;
animation: moveInRight 1s ease-out;
}

 @keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px);
  }

  60% {
    transform: rotate(180deg);
  }

  80% {
    transform: translateX(-10px);
  }

 100% {
 opacity: 1;
 transform: translate(0);
 }
}


  @keyframes moveInRight{
  0% {
    opacity: 0;
    transform: translateX(100px);
  }

  80% {
    transform: translateX(10px);
  }

 100% {
 opacity: 1;
 transform: translate(0);
 }

}

/*
button {
  position: absolute;
  bottom: 70px;
  left: 70px;
  transform: translate(80x, 80px);
  color: rgba(0, 0, 0, 0.583);
  padding: 0.7rem;
  border-radius: 2rem;
  text-transform: uppercase;
  box-shadow:0px 0px 0px 10px rgba(255, 255, 255, 0.165);
  border: 2px solid white;
}*/


@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(30px);
  }


 100% {
 opacity: 1;
 transform: translate(0);
 }

}
.btn:link,
.btn:visited  {
text-transform: uppercase;
text-decoration: none;
padding: 15px 40px;
display: inline-block;
border-radius: 100px;
transition: all .2s;
position: relative;
}

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, .2);
}

.btn:active {
  transform: translateY(-1px);
}
.btn-white {
  background-color: #fff;
  color: grey;
}

.btn::after {
  content: "";
  display: inline-block;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  z-index: -1;
  transition: all .4s;
}

.btn::after {
  background-color: white;
}

.btn:hover::after {
  transform: scale(1.4, 1.6);
  opacity: 0;
}

.btn-animated {
  animation: moveInBottom .5s ease-out .7s;
  animation-fill-mode: backwards;
}

/*THE CASCADE AND SPECIFICITY
  1.Selector specificity include 
       - inline styles
       - IDs
       - Classes
       - Elements

       background: blue ! important;
        - CSS declarations marked with ! important have the highest priority.
        - A selector that contains 1 ID is more specific than one with 1000 classes, If you want to be really specific use an ID.
        - universal selector has no specificity value(0, 0,0,0). 
        - To convert ems to px we multiply by 24px example 3em = (3*24)72px
        - while converting rems into px we multiply by 16px e.g 10rem = 160px.
        - ems and rems are both based on font size.
       */